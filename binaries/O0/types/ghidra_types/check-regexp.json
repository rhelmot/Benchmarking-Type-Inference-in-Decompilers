{
  "_init": {
    "variables": [], 
    "address": "0x108000"
  }, 
  "_start": {
    "variables": [
      {
        "name": "auStack_8", 
        "RBP offset": 0, 
        "type": "char[8]", 
        "size": 8
      }, 
      {
        "name": "param_2", 
        "RBP offset": 8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x108900"
  }, 
  "_FINI_0": {
    "variables": [], 
    "address": "0x1089a0"
  }, 
  "clear_given": {
    "variables": [], 
    "address": "0x1089e5"
  }, 
  "clear_args": {
    "variables": [], 
    "address": "0x108a06"
  }, 
  "init_args_info": {
    "variables": [], 
    "address": "0x108a11"
  }, 
  "cmdline_parser_print_version": {
    "variables": [], 
    "address": "0x108a39"
  }, 
  "print_help_common": {
    "variables": [], 
    "address": "0x108a88"
  }, 
  "cmdline_parser_print_help": {
    "variables": [
      {
        "name": "local_c", 
        "RBP offset": -4, 
        "type": "int", 
        "size": 4
      }
    ], 
    "address": "0x108b19"
  }, 
  "cmdline_parser_init": {
    "variables": [], 
    "address": "0x108b76"
  }, 
  "cmdline_parser_params_init": {
    "variables": [], 
    "address": "0x108bc0"
  }, 
  "cmdline_parser_params_create": {
    "variables": [], 
    "address": "0x108c08"
  }, 
  "cmdline_parser_release": {
    "variables": [
      {
        "name": "local_c", 
        "RBP offset": -4, 
        "type": "int", 
        "size": 4
      }
    ], 
    "address": "0x108c30"
  }, 
  "write_into_file": {
    "variables": [], 
    "address": "0x108c9c"
  }, 
  "cmdline_parser_dump": {
    "variables": [], 
    "address": "0x108cfc"
  }, 
  "cmdline_parser_file_save": {
    "variables": [], 
    "address": "0x108d9f"
  }, 
  "cmdline_parser_free": {
    "variables": [], 
    "address": "0x108e2b"
  }, 
  "gengetopt_strdup": {
    "variables": [], 
    "address": "0x108e46"
  }, 
  "cmdline_parser": {
    "variables": [], 
    "address": "0x108eaa"
  }, 
  "cmdline_parser_ext": {
    "variables": [], 
    "address": "0x108ee2"
  }, 
  "cmdline_parser2": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_24", 
        "RBP offset": -28, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_1c", 
        "RBP offset": -20, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x108f39"
  }, 
  "cmdline_parser_required": {
    "variables": [], 
    "address": "0x108fda"
  }, 
  "cmdline_parser_internal": {
    "variables": [
      {
        "name": "local_6c", 
        "RBP offset": -100, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_64", 
        "RBP offset": -92, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_5c", 
        "RBP offset": -84, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_54", 
        "RBP offset": -76, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_4c", 
        "RBP offset": -68, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "char[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x108fed"
  }, 
  "main": {
    "variables": [
      {
        "name": "local_144", 
        "RBP offset": -316, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_140", 
        "RBP offset": -312, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_13c", 
        "RBP offset": -308, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_138", 
        "RBP offset": -304, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_128", 
        "RBP offset": -288, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_120", 
        "RBP offset": -280, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "uStack_11c", 
        "RBP offset": -276, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_118", 
        "RBP offset": -272, 
        "type": "basic_regex<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>[16]", 
        "size": 16
      }, 
      {
        "name": "local_108", 
        "RBP offset": -256, 
        "type": "char[24]", 
        "size": 24
      }, 
      {
        "name": "local_f0", 
        "RBP offset": -232, 
        "type": "long long *", 
        "size": 8
      }, 
      {
        "name": "local_e8", 
        "RBP offset": -224, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_d8", 
        "RBP offset": -208, 
        "type": "allocator[80]", 
        "size": 80
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "sub_match[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "sub_match[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x109338"
  }, 
  "_GLOBAL__sub_I_main": {
    "variables": [], 
    "address": "0x109a49"
  }, 
  "operator.new": {
    "variables": [], 
    "address": "0x109a5e"
  }, 
  "operator.delete": {
    "variables": [], 
    "address": "0x109a70"
  }, 
  "max": {
    "variables": [], 
    "address": "0x109ad3"
  }, 
  "compare": {
    "variables": [], 
    "address": "0x109ae0"
  }, 
  "~exception": {
    "variables": [], 
    "address": "0x109c1e"
  }, 
  "~clone_base": {
    "variables": [], 
    "address": "0x109c64"
  }, 
  "copy_boost_exception": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "refcount_ptr<boost::exception_detail::error_info_container>[8]", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "refcount_ptr[8]", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x109c8f"
  }, 
  "throw_exception_assert_compatibility": {
    "variables": [], 
    "address": "0x109dba"
  }, 
  "operator~": {
    "variables": [], 
    "address": "0x109de9"
  }, 
  "setf": {
    "variables": [], 
    "address": "0x109e64"
  }, 
  "getloc": {
    "variables": [], 
    "address": "0x109ec6"
  }, 
  "dec": {
    "variables": [], 
    "address": "0x109ef6"
  }, 
  "hex": {
    "variables": [], 
    "address": "0x109f1e"
  }, 
  "oct": {
    "variables": [], 
    "address": "0x109f46"
  }, 
  "operator.cast.to.bool": {
    "variables": [], 
    "address": "0x109f6e"
  }, 
  "tolower": {
    "variables": [], 
    "address": "0x109fae"
  }, 
  "widen": {
    "variables": [], 
    "address": "0x109fe8"
  }, 
  "narrow": {
    "variables": [], 
    "address": "0x10a046"
  }, 
  "is": {
    "variables": [], 
    "address": "0x10a0da"
  }, 
  "is_extended": {
    "variables": [], 
    "address": "0x10a111"
  }, 
  "get_default_syntax": {
    "variables": [
      {
        "name": "local_1f8", 
        "RBP offset": -496, 
        "type": "long long[61]", 
        "size": 488
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10a121"
  }, 
  "get_default_error_string": {
    "variables": [], 
    "address": "0x10a198"
  }, 
  "is_combining<char>": {
    "variables": [], 
    "address": "0x10a1ca"
  }, 
  "is_separator<char>": {
    "variables": [], 
    "address": "0x10a1da"
  }, 
  "lookup_default_collate_name": {
    "variables": [
      {
        "name": "local_25", 
        "RBP offset": -29, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_24", 
        "RBP offset": -28, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10a203"
  }, 
  "~regex_error": {
    "variables": [], 
    "address": "0x10a426"
  }, 
  "raise": {
    "variables": [], 
    "address": "0x10a452"
  }, 
  "lock": {
    "variables": [], 
    "address": "0x10a46a"
  }, 
  "unlock": {
    "variables": [], 
    "address": "0x10a498"
  }, 
  "_Rb_tree_header": {
    "variables": [], 
    "address": "0x10a544"
  }, 
  "_M_reset": {
    "variables": [], 
    "address": "0x10a56a"
  }, 
  "_List_node_header": {
    "variables": [], 
    "address": "0x10a5a6"
  }, 
  "_M_init": {
    "variables": [], 
    "address": "0x10a5c2"
  }, 
  "~cpp_regex_traits_base": {
    "variables": [], 
    "address": "0x10a5f4"
  }, 
  "cpp_regex_traits_char_layer": {
    "variables": [], 
    "address": "0x10a666"
  }, 
  "operator&": {
    "variables": [], 
    "address": "0x10abbf"
  }, 
  "operator|": {
    "variables": [], 
    "address": "0x10abd3"
  }, 
  "operator&=": {
    "variables": [], 
    "address": "0x10abe7"
  }, 
  "operator|=": {
    "variables": [], 
    "address": "0x10ac14"
  }, 
  "~raw_storage": {
    "variables": [], 
    "address": "0x10ac42"
  }, 
  "resize": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10ac62"
  }, 
  "extend": {
    "variables": [], 
    "address": "0x10ad56"
  }, 
  "align": {
    "variables": [], 
    "address": "0x10af3c"
  }, 
  "raw_storage": {
    "variables": [], 
    "address": "0x10af7a"
  }, 
  "name": {
    "variables": [], 
    "address": "0x10afb0"
  }, 
  "named_subexpressions": {
    "variables": [], 
    "address": "0x10b0ae"
  }, 
  "char_less": {
    "variables": [], 
    "address": "0x10b23b"
  }, 
  "recursion_saver": {
    "variables": [], 
    "address": "0x10b258"
  }, 
  "~recursion_saver": {
    "variables": [], 
    "address": "0x10b28a"
  }, 
  "umax": {
    "variables": [
      {
        "name": "local_11", 
        "RBP offset": -9, 
        "type": "integral_ant", 
        "size": 1
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10b2cf"
  }, 
  "verify_options": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "logic_error[24]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10b308"
  }, 
  "can_start": {
    "variables": [], 
    "address": "0x10b3b0"
  }, 
  "~mem_block_cache": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10b3e0"
  }, 
  "put": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10b50c"
  }, 
  "instance": {
    "variables": [], 
    "address": "0x10b5c0"
  }, 
  "get_mem_block": {
    "variables": [], 
    "address": "0x10b618"
  }, 
  "put_mem_block": {
    "variables": [], 
    "address": "0x10b62b"
  }, 
  "saved_state": {
    "variables": [], 
    "address": "0x10b652"
  }, 
  "saved_extra_block": {
    "variables": [], 
    "address": "0x10b66a"
  }, 
  "save_state_init": {
    "variables": [], 
    "address": "0x10b6aa"
  }, 
  "~save_state_init": {
    "variables": [], 
    "address": "0x10b752"
  }, 
  "saved_change_case": {
    "variables": [], 
    "address": "0x10b782"
  }, 
  "incrementer": {
    "variables": [], 
    "address": "0x10b7b2"
  }, 
  "~incrementer": {
    "variables": [], 
    "address": "0x10b7da"
  }, 
  "~_Alloc_hider": {
    "variables": [], 
    "address": "0x10b826"
  }, 
  "~refcount_ptr": {
    "variables": [], 
    "address": "0x10b858"
  }, 
  "exception": {
    "variables": [], 
    "address": "0x10b8d0"
  }, 
  "regex_error": {
    "variables": [], 
    "address": "0x10ba1e"
  }, 
  "throw_exception<boost::regex_error>": {
    "variables": [], 
    "address": "0x10ba70"
  }, 
  "get_catalog_name[abi:cxx11]": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "lock_guard<std::mutex>[8]", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10bb70"
  }, 
  "raise_runtime_error<std::runtime_error>": {
    "variables": [], 
    "address": "0x10bc63"
  }, 
  "string<char_const*,void>": {
    "variables": [], 
    "address": "0x10bc7c"
  }, 
  "assign<char_const*,void>": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10bd06"
  }, 
  "get_default_class_id<char>": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10bda4"
  }, 
  "move<int&>": {
    "variables": [], 
    "address": "0x10be64"
  }, 
  "swap<int>": {
    "variables": [
      {
        "name": "local_14", 
        "RBP offset": -12, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10be72"
  }, 
  "lower_bound<__normal_iterator<boost::re_detail_500::named_subexpressions::name_const*,std::vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>>>,boost::re_detail_500::named_subexpressions::name>": {
    "variables": [], 
    "address": "0x10c04c"
  }, 
  "equal_range<__normal_iterator<boost::re_detail_500::named_subexpressions::name_const*,std::vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>>>,boost::re_detail_500::named_subexpressions::name>": {
    "variables": [], 
    "address": "0x10c0dd"
  }, 
  "throw_exception<std::logic_error>": {
    "variables": [], 
    "address": "0x10c369"
  }, 
  "load": {
    "variables": [], 
    "address": "0x10c3cc"
  }, 
  "compare_exchange_strong": {
    "variables": [], 
    "address": "0x10c404"
  }, 
  "basic_regex": {
    "variables": [], 
    "address": "0x10c4d4"
  }, 
  "~basic_regex": {
    "variables": [], 
    "address": "0x10c52c"
  }, 
  "~match_results": {
    "variables": [], 
    "address": "0x10c646"
  }, 
  "prefix": {
    "variables": [], 
    "address": "0x10c7a8"
  }, 
  "operator.cast.to.string": {
    "variables": [
      {
        "name": "local_21", 
        "RBP offset": -25, 
        "type": "allocator<char>", 
        "size": 1
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10c7d8"
  }, 
  "operator<<": {
    "variables": [
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10c926"
  }, 
  "suffix": {
    "variables": [], 
    "address": "0x10ca2c"
  }, 
  "release": {
    "variables": [], 
    "address": "0x10ca8a"
  }, 
  "adopt": {
    "variables": [], 
    "address": "0x10cae2"
  }, 
  "clone_base": {
    "variables": [], 
    "address": "0x10cb18"
  }, 
  "refcount_ptr": {
    "variables": [], 
    "address": "0x10cb32"
  }, 
  "imbue": {
    "variables": [], 
    "address": "0x10cbe6"
  }, 
  "get_mutex_inst": {
    "variables": [], 
    "address": "0x10cc9a"
  }, 
  "lock_guard": {
    "variables": [], 
    "address": "0x10cca8"
  }, 
  "~lock_guard": {
    "variables": [], 
    "address": "0x10ccd6"
  }, 
  "get_catalog_name_inst[abi:cxx11]": {
    "variables": [], 
    "address": "0x10ccf4"
  }, 
  "throw_exception<std::runtime_error>": {
    "variables": [], 
    "address": "0x10ce07"
  }, 
  "count_chars<std::string,char>": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_1c", 
        "RBP offset": -20, 
        "type": "int", 
        "size": 4
      }
    ], 
    "address": "0x10ce94"
  }, 
  "lower_bound<boost::re_detail_500::character_pointer_range<char>const*,boost::re_detail_500::character_pointer_range<char>>": {
    "variables": [], 
    "address": "0x10ceff"
  }, 
  "_Destroy<boost::re_detail_500::named_subexpressions::name*,boost::re_detail_500::named_subexpressions::name>": {
    "variables": [], 
    "address": "0x10d004"
  }, 
  "_Destroy<unsigned_char*,unsigned_char>": {
    "variables": [], 
    "address": "0x10d4cf"
  }, 
  "_M_swap_data": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "_Vector_impl_data[24]", 
        "size": 24
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10d4fa"
  }, 
  "_S_on_swap": {
    "variables": [], 
    "address": "0x10d575"
  }, 
  "~__shared_count": {
    "variables": [], 
    "address": "0x10d63e"
  }, 
  "mark_count": {
    "variables": [], 
    "address": "0x10d81c"
  }, 
  "~perl_matcher": {
    "variables": [], 
    "address": "0x10d832"
  }, 
  "regex_search<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>,char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>": {
    "variables": [
      {
        "name": "local_118", 
        "RBP offset": -272, 
        "type": "perl_matcher<__normal_iterator<char_*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_*,std::string>>>,boost::regex_traits<char,boost::cpp_regex_traits<char>>>[248]", 
        "size": 248
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10d875"
  }, 
  "raise_logic_error": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "logic_error[24]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10d980"
  }, 
  "string<__normal_iterator<char_const*,std::string>,void>": {
    "variables": [], 
    "address": "0x10d9d2"
  }, 
  "str": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10db0c"
  }, 
  "distance<__normal_iterator<char_const*,std::string>>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10dc27"
  }, 
  "_M_construct_aux<char_const*>": {
    "variables": [], 
    "address": "0x10dc58"
  }, 
  "add_ref": {
    "variables": [], 
    "address": "0x10dcaa"
  }, 
  "_Destroy<boost::re_detail_500::named_subexpressions::name*>": {
    "variables": [], 
    "address": "0x10dee3"
  }, 
  "distance<__normal_iterator<boost::re_detail_500::named_subexpressions::name_const*,std::vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>>>>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10df09"
  }, 
  "advance<__normal_iterator<boost::re_detail_500::named_subexpressions::name_const*,std::vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>>>,long>": {
    "variables": [], 
    "address": "0x10df3a"
  }, 
  "pair<__normal_iterator<boost::re_detail_500::named_subexpressions::name_const*,std::vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>>>&,__normal_iterator<boost::re_detail_500::named_subexpressions::name_const*,std::vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>>>&,true>": {
    "variables": [], 
    "address": "0x10e0c8"
  }, 
  "uninitialized_copy<__normal_iterator<unsigned_char_const*,std::vector<unsigned_char,std::allocator<unsigned_char>>>,unsigned_char*>": {
    "variables": [], 
    "address": "0x10e23f"
  }, 
  "_Destroy<unsigned_char*>": {
    "variables": [], 
    "address": "0x10e270"
  }, 
  "_M_copy_data": {
    "variables": [], 
    "address": "0x10e2c4"
  }, 
  "_M_release": {
    "variables": [], 
    "address": "0x10e362"
  }, 
  "_Destroy<boost::sub_match<__normal_iterator<char_const*,std::string>>*,boost::sub_match<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x10e584"
  }, 
  "pair<__normal_iterator<char_const*,std::string>,__normal_iterator<char_const*,std::string>,true>": {
    "variables": [], 
    "address": "0x10e5ae"
  }, 
  "str[abi:cxx11]": {
    "variables": [
      {
        "name": "local_49", 
        "RBP offset": -65, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10e604"
  }, 
  "perl_matcher": {
    "variables": [
      {
        "name": "param_7", 
        "RBP offset": 16, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10e78e"
  }, 
  "~unique_ptr": {
    "variables": [], 
    "address": "0x10e8fa"
  }, 
  "~repeater_count": {
    "variables": [], 
    "address": "0x10e95e"
  }, 
  "_M_construct<char_const*>": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10eb80"
  }, 
  "distance<boost::re_detail_500::character_pointer_range<char>const*>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "character_pointer_range *", 
        "size": 8
      }
    ], 
    "address": "0x10ecd4"
  }, 
  "advance<boost::re_detail_500::character_pointer_range<char>const*,long>": {
    "variables": [], 
    "address": "0x10ed05"
  }, 
  "forward<__normal_iterator<boost::re_detail_500::named_subexpressions::name_const*,std::vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>>>&>": {
    "variables": [], 
    "address": "0x10eeff"
  }, 
  "do_assign": {
    "variables": [
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "shared_ptr<boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>>[16]", 
        "size": 16
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "shared_ptr<boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>>[24]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10f00e"
  }, 
  "_Destroy<boost::sub_match<__normal_iterator<char_const*,std::string>>*>": {
    "variables": [], 
    "address": "0x10f209"
  }, 
  "unique_ptr<std::default_delete<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,void>": {
    "variables": [], 
    "address": "0x10f2e8"
  }, 
  "construct_init": {
    "variables": [
      {
        "name": "local_3d", 
        "RBP offset": -53, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_3c", 
        "RBP offset": -52, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "invalid_argument[24]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10f402"
  }, 
  "get_deleter": {
    "variables": [], 
    "address": "0x10f6f4"
  }, 
  "move<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>*&>": {
    "variables": [], 
    "address": "0x10f70e"
  }, 
  "_Destroy<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>*,boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x10f760"
  }, 
  "find_imp": {
    "variables": [
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "save_state_init[8]", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10f78a"
  }, 
  "_M_construct_aux<__normal_iterator<char_const*,std::string>>": {
    "variables": [], 
    "address": "0x10fb9c"
  }, 
  "distance<char_const*>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "char *", 
        "size": 8
      }
    ], 
    "address": "0x10fc2c"
  }, 
  "equal<char_const*,char_const*>": {
    "variables": [], 
    "address": "0x10fce2"
  }, 
  "distance<__normal_iterator<char*,std::string>>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x10fd59"
  }, 
  "copy<__normal_iterator<unsigned_char_const*,std::vector<unsigned_char,std::allocator<unsigned_char>>>,unsigned_char*>": {
    "variables": [], 
    "address": "0x10fe4a"
  }, 
  "~_Sp_counted_base": {
    "variables": [], 
    "address": "0x10feb0"
  }, 
  "~named_subexpressions": {
    "variables": [], 
    "address": "0x10fedc"
  }, 
  "~regex_data": {
    "variables": [], 
    "address": "0x10ff34"
  }, 
  "basic_regex_implementation": {
    "variables": [], 
    "address": "0x10fffc"
  }, 
  "~basic_regex_creator": {
    "variables": [], 
    "address": "0x110022"
  }, 
  "~basic_regex_parser": {
    "variables": [], 
    "address": "0x110042"
  }, 
  "swap": {
    "variables": [], 
    "address": "0x11013a"
  }, 
  "get_traits": {
    "variables": [], 
    "address": "0x11020e"
  }, 
  "~wrapexcept": {
    "variables": [], 
    "address": "0x1103c9"
  }, 
  "throw_exception<std::invalid_argument>": {
    "variables": [], 
    "address": "0x1103cf"
  }, 
  "estimate_max_state_count": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x110432"
  }, 
  "_M_deleter": {
    "variables": [], 
    "address": "0x11076e"
  }, 
  "_Destroy<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>*>": {
    "variables": [], 
    "address": "0x110788"
  }, 
  "find_restart_any": {
    "variables": [], 
    "address": "0x1107ae"
  }, 
  "find_restart_word": {
    "variables": [], 
    "address": "0x1108da"
  }, 
  "find_restart_line": {
    "variables": [], 
    "address": "0x110b04"
  }, 
  "find_restart_buf": {
    "variables": [], 
    "address": "0x110cd6"
  }, 
  "match_prefix": {
    "variables": [], 
    "address": "0x110d3e"
  }, 
  "find_restart_lit": {
    "variables": [], 
    "address": "0x110e8e"
  }, 
  "set_size": {
    "variables": [
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "sub_match<__normal_iterator<char_*,std::string>>[24]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x110ef0"
  }, 
  "set_base": {
    "variables": [], 
    "address": "0x1110e4"
  }, 
  "get_named_subs": {
    "variables": [], 
    "address": "0x111100"
  }, 
  "set_named_subs": {
    "variables": [], 
    "address": "0x111194"
  }, 
  "length": {
    "variables": [], 
    "address": "0x1111be"
  }, 
  "unwind": {
    "variables": [], 
    "address": "0x1112bc"
  }, 
  "_M_construct<__normal_iterator<char_const*,std::string>>": {
    "variables": [
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long *", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x111394"
  }, 
  "lexicographical_compare<char_const*,char_const*>": {
    "variables": [], 
    "address": "0x1114f8"
  }, 
  "move<std::shared_ptr<boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>>&>": {
    "variables": [], 
    "address": "0x11190c"
  }, 
  "regex_data": {
    "variables": [], 
    "address": "0x1119f2"
  }, 
  "basic_regex_parser": {
    "variables": [], 
    "address": "0x111b66"
  }, 
  "parse": {
    "variables": [
      {
        "name": "local_52", 
        "RBP offset": -74, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_51", 
        "RBP offset": -73, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x111c94"
  }, 
  "move<boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>*&>": {
    "variables": [], 
    "address": "0x112082"
  }, 
  "swap<boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>*>": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "basic_regex_implementation *", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x112090"
  }, 
  "_M_swap": {
    "variables": [], 
    "address": "0x112106"
  }, 
  "status": {
    "variables": [], 
    "address": "0x11220a"
  }, 
  "invalid_argument": {
    "variables": [], 
    "address": "0x11221c"
  }, 
  "min<long>": {
    "variables": [], 
    "address": "0x112310"
  }, 
  "reset": {
    "variables": [], 
    "address": "0x11233c"
  }, 
  "get_data": {
    "variables": [], 
    "address": "0x1123b8"
  }, 
  "get<1ul,boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>*,std::default_delete<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x1123e8"
  }, 
  "isctype": {
    "variables": [], 
    "address": "0x1124fe"
  }, 
  "match_all_states": {
    "variables": [
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "incrementer[8]", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1127f6"
  }, 
  "maybe_assign": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x112bf6"
  }, 
  "get_first_state": {
    "variables": [], 
    "address": "0x1130e0"
  }, 
  "fill<__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,boost::sub_match<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x11330e"
  }, 
  "shared_ptr<boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>,void>": {
    "variables": [], 
    "address": "0x113428"
  }, 
  "unwind_end": {
    "variables": [], 
    "address": "0x1134c8"
  }, 
  "unwind_paren": {
    "variables": [], 
    "address": "0x1134e8"
  }, 
  "unwind_recursion_stopper": {
    "variables": [], 
    "address": "0x1135aa"
  }, 
  "unwind_assertion": {
    "variables": [], 
    "address": "0x1135f0"
  }, 
  "unwind_alt": {
    "variables": [], 
    "address": "0x1136a0"
  }, 
  "unwind_repeater_counter": {
    "variables": [], 
    "address": "0x113728"
  }, 
  "unwind_extra_block": {
    "variables": [], 
    "address": "0x113772"
  }, 
  "unwind_greedy_single_repeat": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1137fe"
  }, 
  "unwind_slow_dot_repeat": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x113a48"
  }, 
  "unwind_fast_dot_repeat": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x113dd2"
  }, 
  "unwind_char_repeat": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1140a2"
  }, 
  "unwind_short_set_repeat": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1144b2"
  }, 
  "unwind_long_set_repeat": {
    "variables": [
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "int *", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1148cc"
  }, 
  "unwind_non_greedy_repeat": {
    "variables": [], 
    "address": "0x114d0e"
  }, 
  "~recursion_info": {
    "variables": [], 
    "address": "0x114e28"
  }, 
  "unwind_recursion": {
    "variables": [
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "recursion_info<boost::match_results<__normal_iterator<char_*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_*,std::string>>>>>[120]", 
        "size": 120
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x114e48"
  }, 
  "unwind_recursion_pop": {
    "variables": [], 
    "address": "0x115018"
  }, 
  "unwind_commit": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x1150f0"
  }, 
  "unwind_then": {
    "variables": [
      {
        "name": "local_9", 
        "RBP offset": -1, 
        "type": "char", 
        "size": 1
      }
    ], 
    "address": "0x11520a"
  }, 
  "unwind_case": {
    "variables": [], 
    "address": "0x1152b6"
  }, 
  "~__shared_ptr": {
    "variables": [], 
    "address": "0x11544c"
  }, 
  "~shared_ptr": {
    "variables": [], 
    "address": "0x11546c"
  }, 
  "~cpp_regex_traits": {
    "variables": [], 
    "address": "0x115488"
  }, 
  "~regex_traits": {
    "variables": [], 
    "address": "0x1154a4"
  }, 
  "regex_traits_wrapper": {
    "variables": [], 
    "address": "0x1154c0"
  }, 
  "shared_ptr<boost::regex_traits_wrapper<boost::regex_traits<char,boost::cpp_regex_traits<char>>>,void>": {
    "variables": [], 
    "address": "0x1154dc"
  }, 
  "_Destroy<std::pair<unsigned_long,unsigned_long>*,std::pair<unsigned_long,unsigned_long>>": {
    "variables": [], 
    "address": "0x1155a2"
  }, 
  "_M_enable_shared_from_this_with<boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>,boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>>": {
    "variables": [], 
    "address": "0x1155f2"
  }, 
  "move<std::__shared_ptr<boost::re_detail_500::basic_regex_implementation<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>,(_Lock_policy)2>&>": {
    "variables": [], 
    "address": "0x115601"
  }, 
  "basic_regex_creator": {
    "variables": [], 
    "address": "0x1156dc"
  }, 
  "_Destroy<long*,long>": {
    "variables": [], 
    "address": "0x115a38"
  }, 
  "parse_extended": {
    "variables": [
      {
        "name": "local_4a", 
        "RBP offset": -66, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_49", 
        "RBP offset": -65, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x115b38"
  }, 
  "append_state": {
    "variables": [], 
    "address": "0x11613c"
  }, 
  "parse_basic": {
    "variables": [], 
    "address": "0x116226"
  }, 
  "parse_literal": {
    "variables": [], 
    "address": "0x1164e2"
  }, 
  "parse_all": {
    "variables": [
      {
        "name": "local_4a", 
        "RBP offset": -66, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_49", 
        "RBP offset": -65, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x116626"
  }, 
  "unwind_alts": {
    "variables": [
      {
        "name": "local_59", 
        "RBP offset": -81, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "int *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1167ca"
  }, 
  "flags": {
    "variables": [], 
    "address": "0x116ab8"
  }, 
  "finalize": {
    "variables": [
      {
        "name": "local_31", 
        "RBP offset": -41, 
        "type": "uchar", 
        "size": 1
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x116b06"
  }, 
  "copy_from": {
    "variables": [], 
    "address": "0x116dea"
  }, 
  "get<0ul,boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>*,std::default_delete<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x116e0c"
  }, 
  "_Destroy<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x116e68"
  }, 
  "get_map": {
    "variables": [], 
    "address": "0x116e84"
  }, 
  "can_be_null": {
    "variables": [], 
    "address": "0x116e96"
  }, 
  "match_startmark": {
    "variables": [
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "char", 
        "size": 1
      }
    ], 
    "address": "0x116eca"
  }, 
  "match_endmark": {
    "variables": [], 
    "address": "0x11736a"
  }, 
  "match_literal": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "int", 
        "size": 4
      }
    ], 
    "address": "0x117548"
  }, 
  "match_start_line": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x117642"
  }, 
  "match_end_line": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1177fe"
  }, 
  "match_wild": {
    "variables": [], 
    "address": "0x117994"
  }, 
  "match_match": {
    "variables": [], 
    "address": "0x117a8e"
  }, 
  "match_word_boundary": {
    "variables": [
      {
        "name": "local_19", 
        "RBP offset": -17, 
        "type": "char", 
        "size": 1
      }
    ], 
    "address": "0x117d4e"
  }, 
  "match_within_word": {
    "variables": [], 
    "address": "0x117eec"
  }, 
  "match_word_start": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x117f2a"
  }, 
  "match_word_end": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1180ae"
  }, 
  "match_buffer_start": {
    "variables": [], 
    "address": "0x118238"
  }, 
  "match_buffer_end": {
    "variables": [], 
    "address": "0x1182ac"
  }, 
  "match_backref": {
    "variables": [
      {
        "name": "local_54", 
        "RBP offset": -76, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "char[16]", 
        "size": 16
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x118320"
  }, 
  "match_long_set": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1185d0"
  }, 
  "match_set": {
    "variables": [], 
    "address": "0x1186bc"
  }, 
  "match_jump": {
    "variables": [], 
    "address": "0x118786"
  }, 
  "match_alt": {
    "variables": [
      {
        "name": "local_22", 
        "RBP offset": -26, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_21", 
        "RBP offset": -25, 
        "type": "char", 
        "size": 1
      }
    ], 
    "address": "0x1187aa"
  }, 
  "match_rep": {
    "variables": [
      {
        "name": "local_23", 
        "RBP offset": -27, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_22", 
        "RBP offset": -26, 
        "type": "char", 
        "size": 1
      }
    ], 
    "address": "0x1188d4"
  }, 
  "match_combining": {
    "variables": [], 
    "address": "0x118c84"
  }, 
  "match_soft_buffer_end": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x118dc8"
  }, 
  "match_restart_continue": {
    "variables": [], 
    "address": "0x118eec"
  }, 
  "match_dot_repeat_dispatch": {
    "variables": [], 
    "address": "0x118f3a"
  }, 
  "match_char_repeat": {
    "variables": [
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x118f5c"
  }, 
  "match_set_repeat": {
    "variables": [
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11929e"
  }, 
  "match_long_set_repeat": {
    "variables": [
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1195be"
  }, 
  "match_backstep": {
    "variables": [], 
    "address": "0x1198ec"
  }, 
  "match_assert_backref": {
    "variables": [
      {
        "name": "local_35", 
        "RBP offset": -45, 
        "type": "bool", 
        "size": 1
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "char[16]", 
        "size": 16
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11996e"
  }, 
  "match_toggle_case": {
    "variables": [], 
    "address": "0x119bb4"
  }, 
  "match_recursion": {
    "variables": [
      {
        "name": "local_a0", 
        "RBP offset": -152, 
        "type": "reverse_iterator[8]", 
        "size": 8
      }, 
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "reverse_iterator[120]", 
        "size": 120
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x119c08"
  }, 
  "match_fail": {
    "variables": [], 
    "address": "0x119efa"
  }, 
  "match_accept": {
    "variables": [], 
    "address": "0x119f0a"
  }, 
  "match_commit": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x119f72"
  }, 
  "match_then": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x11a082"
  }, 
  "raise_error<boost::regex_traits_wrapper<boost::regex_traits<char,boost::cpp_regex_traits<char>>>>": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "regex_error[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11a11b"
  }, 
  "push_recursion_stopper": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x11a1de"
  }, 
  "pair<__normal_iterator<char_const*,std::string>&,__normal_iterator<char_const*,std::string>&,true>": {
    "variables": [], 
    "address": "0x11a3a0"
  }, 
  "cbegin": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11a410"
  }, 
  "_M_fill_insert": {
    "variables": [
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_90", 
        "RBP offset": -136, 
        "type": "vector<boost::sub_match<__normal_iterator<char_*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_*,std::string>>>> *", 
        "size": 8
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_80", 
        "RBP offset": -120, 
        "type": "sub_match *", 
        "size": 8
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "sub_match *", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "sub_match *", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "sub_match *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "_Temporary_value[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11a5d2"
  }, 
  "_M_add_ref_copy": {
    "variables": [], 
    "address": "0x11ac38"
  }, 
  "set_first": {
    "variables": [], 
    "address": "0x11aca4"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_matched_paren<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x11adb5"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_state>": {
    "variables": [], 
    "address": "0x11adc0"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_assertion<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x11adcb"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_position<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x11add6"
  }, 
  "~saved_repeater": {
    "variables": [], 
    "address": "0x11ade2"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_repeater<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x11ae01"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_extra_block>": {
    "variables": [], 
    "address": "0x11ae1c"
  }, 
  "destroy_single_repeat": {
    "variables": [], 
    "address": "0x11ae28"
  }, 
  "translate": {
    "variables": [], 
    "address": "0x11ae6a"
  }, 
  "re_is_set_member<__normal_iterator<char_const*,std::string>,char,boost::regex_traits<char,boost::cpp_regex_traits<char>>,unsigned_int>": {
    "variables": [
      {
        "name": "local_c8", 
        "RBP offset": -192, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_c0", 
        "RBP offset": -184, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_b5", 
        "RBP offset": -173, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_b4", 
        "RBP offset": -172, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_b0", 
        "RBP offset": -168, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_a8", 
        "RBP offset": -160, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_a0", 
        "RBP offset": -152, 
        "type": "cpp_regex_traits<char> *", 
        "size": 8
      }, 
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "string[38]", 
        "size": 38
      }, 
      {
        "name": "local_32", 
        "RBP offset": -42, 
        "type": "short", 
        "size": 2
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11aeae"
  }, 
  "~saved_recursion": {
    "variables": [], 
    "address": "0x11b668"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_recursion<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x11b697"
  }, 
  "extend_stack": {
    "variables": [], 
    "address": "0x11b750"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_change_case>": {
    "variables": [], 
    "address": "0x11b816"
  }, 
  "equal<char>": {
    "variables": [], 
    "address": "0x11b858"
  }, 
  "regex_traits": {
    "variables": [], 
    "address": "0x11b8e0"
  }, 
  "_Destroy<std::pair<unsigned_long,unsigned_long>*>": {
    "variables": [], 
    "address": "0x11b9cf"
  }, 
  "~basic_regex_implementation": {
    "variables": [], 
    "address": "0x11b9f6"
  }, 
  "_Destroy<long*>": {
    "variables": [], 
    "address": "0x11bb83"
  }, 
  "syntax_type": {
    "variables": [], 
    "address": "0x11bc22"
  }, 
  "parse_open_paren": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_64", 
        "RBP offset": -92, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_5c", 
        "RBP offset": -84, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "void *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "pair<_long,_long>[24]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11bc52"
  }, 
  "~set": {
    "variables": [], 
    "address": "0x11c174"
  }, 
  "~basic_char_set": {
    "variables": [], 
    "address": "0x11c190"
  }, 
  "parse_extended_escape": {
    "variables": [
      {
        "name": "local_12f", 
        "RBP offset": -295, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_12e", 
        "RBP offset": -294, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_12d", 
        "RBP offset": -293, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_12c", 
        "RBP offset": -292, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_12b", 
        "RBP offset": -291, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_12a", 
        "RBP offset": -290, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_129", 
        "RBP offset": -289, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_128", 
        "RBP offset": -288, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_124", 
        "RBP offset": -284, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_120", 
        "RBP offset": -280, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_118", 
        "RBP offset": -272, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_110", 
        "RBP offset": -264, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_108", 
        "RBP offset": -256, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_100", 
        "RBP offset": -248, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_f8", 
        "RBP offset": -240, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_f0", 
        "RBP offset": -232, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_e8", 
        "RBP offset": -224, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_e0", 
        "RBP offset": -216, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_d8", 
        "RBP offset": -208, 
        "type": "char *[18]", 
        "size": 144
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11c1cc"
  }, 
  "parse_match_any": {
    "variables": [], 
    "address": "0x11d674"
  }, 
  "parse_repeat": {
    "variables": [
      {
        "name": "local_7d", 
        "RBP offset": -117, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_7c", 
        "RBP offset": -116, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_7b", 
        "RBP offset": -115, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_7a", 
        "RBP offset": -114, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_79", 
        "RBP offset": -113, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "void *", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "void *", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11d6fc"
  }, 
  "parse_repeat_range": {
    "variables": [
      {
        "name": "local_61", 
        "RBP offset": -89, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11e0da"
  }, 
  "parse_alt": {
    "variables": [
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "void *", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "void *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11eddc"
  }, 
  "parse_set": {
    "variables": [
      {
        "name": "local_e8", 
        "RBP offset": -224, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_d8", 
        "RBP offset": -208, 
        "type": "allocator[144]", 
        "size": 144
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11f0a0"
  }, 
  "parse_basic_escape": {
    "variables": [
      {
        "name": "local_da", 
        "RBP offset": -210, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_d9", 
        "RBP offset": -209, 
        "type": "bool", 
        "size": 1
      }, 
      {
        "name": "local_d8", 
        "RBP offset": -208, 
        "type": "allocator[144]", 
        "size": 144
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11f68a"
  }, 
  "append_literal": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x11ffb4"
  }, 
  "fail": {
    "variables": [
      {
        "name": "local_90", 
        "RBP offset": -136, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1200ea"
  }, 
  "copy<char_const*,char*>": {
    "variables": [], 
    "address": "0x120553"
  }, 
  "fixup_pointers": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "re_syntax_base *", 
        "size": 8
      }
    ], 
    "address": "0x12059e"
  }, 
  "fixup_recursions": {
    "variables": [
      {
        "name": "local_a8", 
        "RBP offset": -160, 
        "type": "re_syntax_base *", 
        "size": 8
      }, 
      {
        "name": "local_8a", 
        "RBP offset": -130, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_89", 
        "RBP offset": -129, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_84", 
        "RBP offset": -124, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_80", 
        "RBP offset": -120, 
        "type": "re_syntax_base *", 
        "size": 8
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "re_syntax_base *", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "regex_error[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1206f6"
  }, 
  "create_startmaps": {
    "variables": [
      {
        "name": "local_b8", 
        "RBP offset": -176, 
        "type": "re_syntax_base *", 
        "size": 8
      }, 
      {
        "name": "local_b0", 
        "RBP offset": -168, 
        "type": "basic_regex_creator<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>> *", 
        "size": 8
      }, 
      {
        "name": "local_a1", 
        "RBP offset": -153, 
        "type": "basic_regex_creator<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>", 
        "size": 1
      }, 
      {
        "name": "local_a0", 
        "RBP offset": -152, 
        "type": "basic_regex_creator<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>> *", 
        "size": 8
      }, 
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "pair<bool,boost::re_detail_500::re_syntax_base*>[16]", 
        "size": 16
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "vector<std::pair<bool,boost::re_detail_500::re_syntax_base*>,std::allocator<std::pair<bool,boost::re_detail_500::re_syntax_base*>>>[32]", 
        "size": 32
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "regex_error[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x120bc8"
  }, 
  "assign": {
    "variables": [], 
    "address": "0x121032"
  }, 
  "create_startmap": {
    "variables": [
      {
        "name": "local_e8", 
        "RBP offset": -224, 
        "type": "re_set_long *", 
        "size": 8
      }, 
      {
        "name": "local_d4", 
        "RBP offset": -204, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_d3", 
        "RBP offset": -203, 
        "type": "basic_regex_creator<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>", 
        "size": 1
      }, 
      {
        "name": "local_d2", 
        "RBP offset": -202, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_d1", 
        "RBP offset": -201, 
        "type": "re_set_long", 
        "size": 1
      }, 
      {
        "name": "local_d0", 
        "RBP offset": -200, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_cc", 
        "RBP offset": -196, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_c8", 
        "RBP offset": -192, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_c4", 
        "RBP offset": -188, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_c0", 
        "RBP offset": -184, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_bc", 
        "RBP offset": -180, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_b8", 
        "RBP offset": -176, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_b4", 
        "RBP offset": -172, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_b0", 
        "RBP offset": -168, 
        "type": "re_set_long *", 
        "size": 8
      }, 
      {
        "name": "local_a8", 
        "RBP offset": -160, 
        "type": "re_set_long *", 
        "size": 8
      }, 
      {
        "name": "local_a0", 
        "RBP offset": -152, 
        "type": "int *", 
        "size": 8
      }, 
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "re_set_long *", 
        "size": 8
      }, 
      {
        "name": "local_90", 
        "RBP offset": -136, 
        "type": "int *", 
        "size": 8
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "recursion_saver[32]", 
        "size": 32
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "regex_error[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x121060"
  }, 
  "get_restart_type": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "re_syntax_base *", 
        "size": 8
      }
    ], 
    "address": "0x121f1c"
  }, 
  "probe_leading_repeat": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "re_syntax_base *", 
        "size": 8
      }
    ], 
    "address": "0x121f98"
  }, 
  "_M_get": {
    "variables": [], 
    "address": "0x1220ca"
  }, 
  "push_assertion": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x1220e4"
  }, 
  "push_matched_paren": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x1221d2"
  }, 
  "push_recursion": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x12228a"
  }, 
  "push_repeater_count": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x12235a"
  }, 
  "set_second": {
    "variables": [], 
    "address": "0x12247c"
  }, 
  "push_alt": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x122588"
  }, 
  "get_id": {
    "variables": [], 
    "address": "0x122648"
  }, 
  "check_null_repeat": {
    "variables": [], 
    "address": "0x12265a"
  }, 
  "get_count": {
    "variables": [], 
    "address": "0x1226d2"
  }, 
  "push_non_greedy_repeat": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x1226e4"
  }, 
  "match_dot_repeat_fast": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1227a4"
  }, 
  "match_dot_repeat_slow": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x122a44"
  }, 
  "advance<__normal_iterator<char_const*,std::string>,unsigned_long>": {
    "variables": [], 
    "address": "0x122c5e"
  }, 
  "push_single_repeat": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x122c98"
  }, 
  "advance<__normal_iterator<char_const*,std::string>,int>": {
    "variables": [], 
    "address": "0x122d64"
  }, 
  "push_case_change": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x122d9e"
  }, 
  "rbegin": {
    "variables": [], 
    "address": "0x122e28"
  }, 
  "rend": {
    "variables": [], 
    "address": "0x122e5c"
  }, 
  "push_recursion_pop": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "void *", 
        "size": 8
      }
    ], 
    "address": "0x122f2a"
  }, 
  "reserve": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "recursion_info *", 
        "size": 8
      }
    ], 
    "address": "0x12301e"
  }, 
  "skip_until_paren": {
    "variables": [], 
    "address": "0x1231d0"
  }, 
  "raise_runtime_error<boost::regex_error>": {
    "variables": [], 
    "address": "0x12332e"
  }, 
  "_S_propagate_on_copy_assign": {
    "variables": [], 
    "address": "0x123346"
  }, 
  "_S_always_equal": {
    "variables": [], 
    "address": "0x123351"
  }, 
  "operator+": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "sub_match *", 
        "size": 8
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x123700"
  }, 
  "forward<__normal_iterator<char_const*,std::string>&>": {
    "variables": [], 
    "address": "0x12376b"
  }, 
  "move<__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x1237b4"
  }, 
  "_Temporary_value<boost::sub_match<__normal_iterator<char_const*,std::string>>const&>": {
    "variables": [], 
    "address": "0x12390a"
  }, 
  "~_Temporary_value": {
    "variables": [], 
    "address": "0x123964"
  }, 
  "_M_val": {
    "variables": [], 
    "address": "0x123994"
  }, 
  "move_backward<boost::sub_match<__normal_iterator<char_const*,std::string>>*,boost::sub_match<__normal_iterator<char_const*,std::string>>*>": {
    "variables": [], 
    "address": "0x123a01"
  }, 
  "fill<boost::sub_match<__normal_iterator<char_const*,std::string>>*,boost::sub_match<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x123a4c"
  }, 
  "inplace_destroy<boost::re_detail_500::saved_single_repeat<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x123c1e"
  }, 
  "re_skip_past_null<char>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "char *", 
        "size": 8
      }
    ], 
    "address": "0x123c29"
  }, 
  "string_compare<char,std::char_traits<char>,std::allocator<char>>": {
    "variables": [], 
    "address": "0x123cb2"
  }, 
  "move<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>&>": {
    "variables": [], 
    "address": "0x123d98"
  }, 
  "emplace_back<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x123da6"
  }, 
  "cpp_regex_traits": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "locale[8]", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12417c"
  }, 
  "_M_enable_shared_from_this_with<boost::regex_traits_wrapper<boost::regex_traits<char,boost::cpp_regex_traits<char>>>,boost::regex_traits_wrapper<boost::regex_traits<char,boost::cpp_regex_traits<char>>>>": {
    "variables": [], 
    "address": "0x124220"
  }, 
  "lookup_classname": {
    "variables": [
      {
        "name": "local_5c", 
        "RBP offset": -84, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1242ce"
  }, 
  "error_string[abi:cxx11]": {
    "variables": [
      {
        "name": "local_31", 
        "RBP offset": -41, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1244b4"
  }, 
  "parse_perl_extension": {
    "variables": [
      {
        "name": "local_11b", 
        "RBP offset": -275, 
        "type": "basic_regex_parser<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>", 
        "size": 1
      }, 
      {
        "name": "local_11a", 
        "RBP offset": -274, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_118", 
        "RBP offset": -272, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_114", 
        "RBP offset": -268, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_110", 
        "RBP offset": -264, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_10c", 
        "RBP offset": -260, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_108", 
        "RBP offset": -256, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_104", 
        "RBP offset": -252, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_100", 
        "RBP offset": -248, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_f8", 
        "RBP offset": -240, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_f0", 
        "RBP offset": -232, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_e8", 
        "RBP offset": -224, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_e0", 
        "RBP offset": -216, 
        "type": "void *", 
        "size": 8
      }, 
      {
        "name": "local_d8", 
        "RBP offset": -208, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_d0", 
        "RBP offset": -200, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_c8", 
        "RBP offset": -192, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_c0", 
        "RBP offset": -184, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_b8", 
        "RBP offset": -176, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_b0", 
        "RBP offset": -168, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_a8", 
        "RBP offset": -160, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_a0", 
        "RBP offset": -152, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_90", 
        "RBP offset": -136, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_80", 
        "RBP offset": -120, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "void *", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "int *", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "void *", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "allocator[16]", 
        "size": 16
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x124648"
  }, 
  "parse_perl_verb": {
    "variables": [], 
    "address": "0x1286fc"
  }, 
  "forward<long>": {
    "variables": [], 
    "address": "0x1295d5"
  }, 
  "forward<int>": {
    "variables": [], 
    "address": "0x1295e3"
  }, 
  "pair<long,int,true>": {
    "variables": [], 
    "address": "0x1295f2"
  }, 
  "at": {
    "variables": [], 
    "address": "0x12966e"
  }, 
  "escape_syntax_type": {
    "variables": [], 
    "address": "0x1296a6"
  }, 
  "set": {
    "variables": [], 
    "address": "0x12970e"
  }, 
  "~_Vector_impl": {
    "variables": [], 
    "address": "0x12972a"
  }, 
  "basic_char_set": {
    "variables": [], 
    "address": "0x12977e"
  }, 
  "negate": {
    "variables": [], 
    "address": "0x129866"
  }, 
  "add_class": {
    "variables": [], 
    "address": "0x12987a"
  }, 
  "unescape_character": {
    "variables": [
      {
        "name": "local_89", 
        "RBP offset": -129, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_80", 
        "RBP offset": -120, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1298f8"
  }, 
  "parse_backref": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12abde"
  }, 
  "parse_QE": {
    "variables": [
      {
        "name": "local_59", 
        "RBP offset": -81, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12ae02"
  }, 
  "get_escape_R_string<char>": {
    "variables": [], 
    "address": "0x12b06f"
  }, 
  "~parser_buf": {
    "variables": [], 
    "address": "0x12b0a6"
  }, 
  "toi": {
    "variables": [
      {
        "name": "local_181", 
        "RBP offset": -377, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_180", 
        "RBP offset": -376, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_178", 
        "RBP offset": -368, 
        "type": "parser_buf<char,std::char_traits<char>>[64]", 
        "size": 64
      }, 
      {
        "name": "local_138", 
        "RBP offset": -304, 
        "type": "istream[16]", 
        "size": 16
      }, 
      {
        "name": "auStack_128", 
        "RBP offset": -288, 
        "type": "char[264]", 
        "size": 264
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12b0d2"
  }, 
  "hash_value_from_capture_name<char_const*>": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12b373"
  }, 
  "insert_state": {
    "variables": [], 
    "address": "0x12b3ea"
  }, 
  "parse_set_literal": {
    "variables": [
      {
        "name": "local_14", 
        "RBP offset": -12, 
        "type": "basic_char_set[2]", 
        "size": 2
      }, 
      {
        "name": "local_12", 
        "RBP offset": -10, 
        "type": "basic_char_set[2]", 
        "size": 2
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12b566"
  }, 
  "parse_inner_set": {
    "variables": [
      {
        "name": "local_6e", 
        "RBP offset": -102, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_6d", 
        "RBP offset": -101, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_6c", 
        "RBP offset": -100, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12b830"
  }, 
  "add_negated_class": {
    "variables": [], 
    "address": "0x12c61a"
  }, 
  "getoffset": {
    "variables": [], 
    "address": "0x12c644"
  }, 
  "add_emacs_code": {
    "variables": [
      {
        "name": "local_aa", 
        "RBP offset": -162, 
        "type": "digraph<char>[2]", 
        "size": 2
      }, 
      {
        "name": "local_a8", 
        "RBP offset": -160, 
        "type": "basic_char_set<char,boost::regex_traits<char,boost::cpp_regex_traits<char>>>[136]", 
        "size": 136
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12c65e"
  }, 
  "max<long>": {
    "variables": [], 
    "address": "0x12cd96"
  }, 
  "getaddress": {
    "variables": [], 
    "address": "0x12cf7c"
  }, 
  "~vector": {
    "variables": [], 
    "address": "0x12d0a4"
  }, 
  "pair<bool&,boost::re_detail_500::re_syntax_base*&,true>": {
    "variables": [], 
    "address": "0x12d0e8"
  }, 
  "calculate_backstep": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "re_syntax_base *", 
        "size": 8
      }, 
      {
        "name": "local_1c", 
        "RBP offset": -20, 
        "type": "int", 
        "size": 4
      }
    ], 
    "address": "0x12d15e"
  }, 
  "pop_back": {
    "variables": [], 
    "address": "0x12d4dc"
  }, 
  "get_repeat_type": {
    "variables": [], 
    "address": "0x12d516"
  }, 
  "_M_fill_assign": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "vector<_char,std::allocator<_char>>[24]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12d5aa"
  }, 
  "set_all_masks": {
    "variables": [
      {
        "name": "local_c", 
        "RBP offset": -4, 
        "type": "int", 
        "size": 4
      }
    ], 
    "address": "0x12d722"
  }, 
  "re_is_set_member<char*,char,boost::regex_traits<char,boost::cpp_regex_traits<char>>,unsigned_int>": {
    "variables": [
      {
        "name": "local_b0", 
        "RBP offset": -168, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_a4", 
        "RBP offset": -156, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_a0", 
        "RBP offset": -152, 
        "type": "re_set_long *", 
        "size": 8
      }, 
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[38]", 
        "size": 38
      }, 
      {
        "name": "local_22", 
        "RBP offset": -26, 
        "type": "short", 
        "size": 2
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12d7a9"
  }, 
  "is_bad_repeat": {
    "variables": [], 
    "address": "0x12de04"
  }, 
  "set_bad_repeat": {
    "variables": [], 
    "address": "0x12de68"
  }, 
  "saved_assertion": {
    "variables": [], 
    "address": "0x12df06"
  }, 
  "saved_matched_paren": {
    "variables": [], 
    "address": "0x12df46"
  }, 
  "saved_recursion": {
    "variables": [], 
    "address": "0x12df94"
  }, 
  "saved_repeater": {
    "variables": [], 
    "address": "0x12e02c"
  }, 
  "saved_position": {
    "variables": [], 
    "address": "0x12e07c"
  }, 
  "min<unsigned_long>": {
    "variables": [], 
    "address": "0x12e0bf"
  }, 
  "saved_single_repeat": {
    "variables": [], 
    "address": "0x12e110"
  }, 
  "reverse_iterator": {
    "variables": [], 
    "address": "0x12e164"
  }, 
  "_S_to_pointer<__normal_iterator<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>*,std::vector<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,std::allocator<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>>>>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12e24e"
  }, 
  "_M_allocate_and_copy<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>const*>": {
    "variables": [], 
    "address": "0x12e332"
  }, 
  "_M_allocate_and_copy<__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>const*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x12e46a"
  }, 
  "copy<__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>const*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x12e500"
  }, 
  "_Destroy<__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,boost::sub_match<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x12e54b"
  }, 
  "copy<boost::sub_match<__normal_iterator<char_const*,std::string>>*,boost::sub_match<__normal_iterator<char_const*,std::string>>*>": {
    "variables": [], 
    "address": "0x12e575"
  }, 
  "forward<boost::sub_match<__normal_iterator<char_const*,std::string>>const&>": {
    "variables": [], 
    "address": "0x12e6b6"
  }, 
  "make_move_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>*>": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "sub_match *", 
        "size": 8
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12e723"
  }, 
  "uninitialized_fill_n<boost::sub_match<__normal_iterator<char_const*,std::string>>*,unsigned_long,boost::sub_match<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x12e84d"
  }, 
  "max<unsigned_long>": {
    "variables": [], 
    "address": "0x12e8a0"
  }, 
  "transform[abi:cxx11]": {
    "variables": [
      {
        "name": "local_7d", 
        "RBP offset": -117, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_7c", 
        "RBP offset": -116, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12e934"
  }, 
  "transform_primary[abi:cxx11]": {
    "variables": [
      {
        "name": "local_c0", 
        "RBP offset": -184, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_b8", 
        "RBP offset": -176, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_b0", 
        "RBP offset": -168, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_a8", 
        "RBP offset": -160, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12ec42"
  }, 
  "forward<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x12f0ec"
  }, 
  "_M_realloc_insert<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "vector<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_*,std::string>>>>>,std::allocator<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_*,std::string>>>>>>> *", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "recursion_info *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "recursion_info *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "recursion_info *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "recursion_info *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12f134"
  }, 
  "destroy<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x12f498"
  }, 
  "create_cpp_regex_traits<char>": {
    "variables": [
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "locale[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12f513"
  }, 
  "~regex_traits_wrapper": {
    "variables": [], 
    "address": "0x12f5da"
  }, 
  "_Sp_counted_base": {
    "variables": [], 
    "address": "0x12f6ae"
  }, 
  "lookup_classname_imp": {
    "variables": [
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12f6ea"
  }, 
  "set_name<char>": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "name[8]", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x12f92e"
  }, 
  "parse_options": {
    "variables": [
      {
        "name": "local_c", 
        "RBP offset": -4, 
        "type": "int", 
        "size": 4
      }
    ], 
    "address": "0x12f9c0"
  }, 
  "match_verb": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "char *", 
        "size": 8
      }
    ], 
    "address": "0x12fd58"
  }, 
  "move<std::pair<unsigned_long,unsigned_long>&>": {
    "variables": [], 
    "address": "0x12feee"
  }, 
  "emplace_back<std::pair<unsigned_long,unsigned_long>>": {
    "variables": [], 
    "address": "0x12fefc"
  }, 
  "_M_range_check": {
    "variables": [], 
    "address": "0x12ff96"
  }, 
  "_Vector_impl": {
    "variables": [], 
    "address": "0x13005c"
  }, 
  "~_Vector_base": {
    "variables": [], 
    "address": "0x1300a0"
  }, 
  "_Destroy<boost::re_detail_500::digraph<char>*,boost::re_detail_500::digraph<char>>": {
    "variables": [], 
    "address": "0x130172"
  }, 
  "has_digraphs": {
    "variables": [], 
    "address": "0x13019c"
  }, 
  "append_set": {
    "variables": [
      {
        "name": "local_dc", 
        "RBP offset": -212, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_d8", 
        "RBP offset": -208, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_d4", 
        "RBP offset": -204, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_d0", 
        "RBP offset": -200, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_cc", 
        "RBP offset": -196, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_c8", 
        "RBP offset": -192, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_c4", 
        "RBP offset": -188, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_c0", 
        "RBP offset": -184, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_b8", 
        "RBP offset": -176, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_b0", 
        "RBP offset": -168, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_a8", 
        "RBP offset": -160, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_a0", 
        "RBP offset": -152, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_98", 
        "RBP offset": -144, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "string[38]", 
        "size": 38
      }, 
      {
        "name": "local_32", 
        "RBP offset": -42, 
        "type": "short", 
        "size": 2
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1310be"
  }, 
  "parser_buf": {
    "variables": [], 
    "address": "0x131ad8"
  }, 
  "find<char_const*,char>": {
    "variables": [], 
    "address": "0x131b37"
  }, 
  "_M_realloc_insert<long_const&>": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "vector<long,std::allocator<long>> *", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x131be6"
  }, 
  "get_next_set_literal": {
    "variables": [
      {
        "name": "local_5a", 
        "RBP offset": -82, 
        "type": "digraph<char>[2]", 
        "size": 2
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x131efa"
  }, 
  "add_range": {
    "variables": [], 
    "address": "0x1325ce"
  }, 
  "add_single": {
    "variables": [], 
    "address": "0x13266a"
  }, 
  "add_equivalent": {
    "variables": [], 
    "address": "0x132710"
  }, 
  "digraph": {
    "variables": [
      {
        "name": "local_24", 
        "RBP offset": -28, 
        "type": "char[4]", 
        "size": 4
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "digraph<char> *", 
        "size": 8
      }, 
      {
        "name": "local_11", 
        "RBP offset": -9, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13276a"
  }, 
  "destroy<long>": {
    "variables": [], 
    "address": "0x132806"
  }, 
  "_Destroy<std::pair<bool,boost::re_detail_500::re_syntax_base*>*,std::pair<bool,boost::re_detail_500::re_syntax_base*>>": {
    "variables": [], 
    "address": "0x1328fc"
  }, 
  "forward<bool&>": {
    "variables": [], 
    "address": "0x132926"
  }, 
  "forward<boost::re_detail_500::re_syntax_base*&>": {
    "variables": [], 
    "address": "0x132934"
  }, 
  "move<std::pair<bool,boost::re_detail_500::re_syntax_base*>&>": {
    "variables": [], 
    "address": "0x132942"
  }, 
  "emplace_back<std::pair<bool,boost::re_detail_500::re_syntax_base*>>": {
    "variables": [], 
    "address": "0x132950"
  }, 
  "capacity": {
    "variables": [], 
    "address": "0x132ba4"
  }, 
  "fill<__normal_iterator<unsigned_char*,std::vector<unsigned_char,std::allocator<unsigned_char>>>,unsigned_char>": {
    "variables": [], 
    "address": "0x132cd6"
  }, 
  "_M_erase_at_end": {
    "variables": [], 
    "address": "0x132d36"
  }, 
  "fill_n<unsigned_char*,unsigned_long,unsigned_char>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "uchar *", 
        "size": 8
      }
    ], 
    "address": "0x132d92"
  }, 
  "sub_match": {
    "variables": [], 
    "address": "0x132de4"
  }, 
  "match_results": {
    "variables": [], 
    "address": "0x132e80"
  }, 
  "repeater_count": {
    "variables": [], 
    "address": "0x132f38"
  }, 
  "operator+=": {
    "variables": [], 
    "address": "0x13302a"
  }, 
  "_Destroy<__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x13324f"
  }, 
  "uninitialized_copy<boost::sub_match<__normal_iterator<char_const*,std::string>>*,boost::sub_match<__normal_iterator<char_const*,std::string>>*>": {
    "variables": [], 
    "address": "0x1332df"
  }, 
  "construct<boost::sub_match<__normal_iterator<char_const*,std::string>>,boost::sub_match<__normal_iterator<char_const*,std::string>>const&>": {
    "variables": [], 
    "address": "0x1333aa"
  }, 
  "destroy<boost::sub_match<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x1333f6"
  }, 
  "move<boost::sub_match<__normal_iterator<char_const*,std::string>>*&>": {
    "variables": [], 
    "address": "0x133405"
  }, 
  "uninitialized_copy<std::move_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>*>,boost::sub_match<__normal_iterator<char_const*,std::string>>*>": {
    "variables": [], 
    "address": "0x13343d"
  }, 
  "uninitialized_copy<boost::sub_match<__normal_iterator<char_const*,std::string>>const*,boost::sub_match<__normal_iterator<char_const*,std::string>>*>": {
    "variables": [], 
    "address": "0x1335f9"
  }, 
  "find<__normal_iterator<char*,std::string>,char>": {
    "variables": [], 
    "address": "0x13367a"
  }, 
  "construct<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>>": {
    "variables": [], 
    "address": "0x133758"
  }, 
  "get": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "lock_guard<std::mutex>[8]", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x133964"
  }, 
  "move<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>&>": {
    "variables": [], 
    "address": "0x1339fa"
  }, 
  "name<char>": {
    "variables": [], 
    "address": "0x133c88"
  }, 
  "bubble_down_one<__normal_iterator<boost::re_detail_500::named_subexpressions::name*,std::vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>>>>": {
    "variables": [
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long[2]", 
        "size": 16
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x133d8c"
  }, 
  "forward<std::pair<unsigned_long,unsigned_long>>": {
    "variables": [], 
    "address": "0x133ea9"
  }, 
  "_M_realloc_insert<std::pair<unsigned_long,unsigned_long>>": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "vector<std::pair<_long,_long>,std::allocator<std::pair<_long,_long>>> *", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "pair *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "pair *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "pair *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "pair *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x133f7a"
  }, 
  "_Vector_impl_data": {
    "variables": [], 
    "address": "0x1342d6"
  }, 
  "_M_deallocate": {
    "variables": [], 
    "address": "0x134310"
  }, 
  "_Destroy<boost::re_detail_500::digraph<char>*>": {
    "variables": [], 
    "address": "0x1343a3"
  }, 
  "singles_begin": {
    "variables": [], 
    "address": "0x1343ca"
  }, 
  "singles_end": {
    "variables": [], 
    "address": "0x1343e4"
  }, 
  "distance<std::_Rb_tree_const_iterator<boost::re_detail_500::digraph<char>>>": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long[2]", 
        "size": 16
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1343fe"
  }, 
  "ranges_begin": {
    "variables": [], 
    "address": "0x134452"
  }, 
  "ranges_end": {
    "variables": [], 
    "address": "0x134470"
  }, 
  "distance<__normal_iterator<boost::re_detail_500::digraph<char>const*,std::vector<boost::re_detail_500::digraph<char>,std::allocator<boost::re_detail_500::digraph<char>>>>>": {
    "variables": [
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13448e"
  }, 
  "equivalents_begin": {
    "variables": [], 
    "address": "0x1344c0"
  }, 
  "equivalents_end": {
    "variables": [], 
    "address": "0x1344de"
  }, 
  "classes": {
    "variables": [], 
    "address": "0x1344fc"
  }, 
  "negated_classes": {
    "variables": [], 
    "address": "0x13450e"
  }, 
  "is_negated": {
    "variables": [], 
    "address": "0x134520"
  }, 
  "operator>": {
    "variables": [], 
    "address": "0x13461e"
  }, 
  "copy<__normal_iterator<char*,std::string>,char*>": {
    "variables": [], 
    "address": "0x134648"
  }, 
  "operator<=": {
    "variables": [], 
    "address": "0x1346a5"
  }, 
  "valid_value<char>": {
    "variables": [], 
    "address": "0x134753"
  }, 
  "lookup_collatename[abi:cxx11]": {
    "variables": [
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x134774"
  }, 
  "setbuf": {
    "variables": [], 
    "address": "0x134a48"
  }, 
  "forward<long_const&>": {
    "variables": [], 
    "address": "0x134b02"
  }, 
  "construct<long,long_const&>": {
    "variables": [], 
    "address": "0x134b10"
  }, 
  "insert": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "_Rb_tree_iterator[8]", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "bool[8]", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long[3]", 
        "size": 24
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x134e64"
  }, 
  "pair<char,char,true>": {
    "variables": [], 
    "address": "0x134ed8"
  }, 
  "pair<char&,char,true>": {
    "variables": [], 
    "address": "0x134f1a"
  }, 
  "_Destroy<std::pair<bool,boost::re_detail_500::re_syntax_base*>*>": {
    "variables": [], 
    "address": "0x134fc3"
  }, 
  "forward<std::pair<bool,boost::re_detail_500::re_syntax_base*>>": {
    "variables": [], 
    "address": "0x134fe9"
  }, 
  "_M_realloc_insert<std::pair<bool,boost::re_detail_500::re_syntax_base*>>": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "vector<std::pair<bool,boost::re_detail_500::re_syntax_base*>,std::allocator<std::pair<bool,boost::re_detail_500::re_syntax_base*>>> *", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "pair *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "pair *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "pair *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "pair *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13506e"
  }, 
  "destroy<std::pair<bool,boost::re_detail_500::re_syntax_base*>>": {
    "variables": [], 
    "address": "0x1353a0"
  }, 
  "_S_check_init_len": {
    "variables": [
      {
        "name": "local_21", 
        "RBP offset": -25, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1353af"
  }, 
  "_M_fill_initialize": {
    "variables": [], 
    "address": "0x135430"
  }, 
  "uninitialized_fill_n<unsigned_char*,unsigned_long,unsigned_char>": {
    "variables": [], 
    "address": "0x1354c1"
  }, 
  "vector": {
    "variables": [
      {
        "name": "local_31", 
        "RBP offset": -41, 
        "type": "allocator", 
        "size": 1
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13554a"
  }, 
  "unwind_until": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "repeater_count *", 
        "size": 8
      }
    ], 
    "address": "0x13565e"
  }, 
  "uninitialized_copy<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>const*,boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>*>": {
    "variables": [], 
    "address": "0x13576e"
  }, 
  "uninitialized_copy<__normal_iterator<boost::sub_match<__normal_iterator<char_const*,std::string>>const*,std::vector<boost::sub_match<__normal_iterator<char_const*,std::string>>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,boost::sub_match<__normal_iterator<char_const*,std::string>>*>": {
    "variables": [], 
    "address": "0x13579f"
  }, 
  "_Construct<boost::sub_match<__normal_iterator<char_const*,std::string>>,boost::sub_match<__normal_iterator<char_const*,std::string>>const&>": {
    "variables": [], 
    "address": "0x1359fa"
  }, 
  "~_List_impl": {
    "variables": [], 
    "address": "0x135b20"
  }, 
  "_List_base": {
    "variables": [], 
    "address": "0x135b3c"
  }, 
  "list": {
    "variables": [], 
    "address": "0x135b58"
  }, 
  "~list": {
    "variables": [], 
    "address": "0x135b74"
  }, 
  "data": {
    "variables": [], 
    "address": "0x135c00"
  }, 
  "~data": {
    "variables": [], 
    "address": "0x135c2c"
  }, 
  "shared_ptr": {
    "variables": [], 
    "address": "0x135c94"
  }, 
  "do_get": {
    "variables": [
      {
        "name": "local_90", 
        "RBP offset": -136, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_80", 
        "RBP offset": -120, 
        "type": "cpp_regex_traits_base *", 
        "size": 8
      }, 
      {
        "name": "local_78", 
        "RBP offset": -112, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_70", 
        "RBP offset": -104, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "cpp_regex_traits_base *", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long[2]", 
        "size": 16
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long[5]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x135cf2"
  }, 
  "move<boost::re_detail_500::named_subexpressions::name&>": {
    "variables": [], 
    "address": "0x136804"
  }, 
  "emplace_back<boost::re_detail_500::named_subexpressions::name>": {
    "variables": [], 
    "address": "0x136812"
  }, 
  "construct<std::pair<unsigned_long,unsigned_long>,std::pair<unsigned_long,unsigned_long>>": {
    "variables": [], 
    "address": "0x1369ae"
  }, 
  "string<__normal_iterator<char*,std::string>,void>": {
    "variables": [], 
    "address": "0x136fd0"
  }, 
  "_Iter_equals_val": {
    "variables": [], 
    "address": "0x137048"
  }, 
  "_M_realloc_insert<boost::re_detail_500::digraph<char>const&>": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "vector<boost::re_detail_500::digraph<char>,std::allocator<boost::re_detail_500::digraph<char>>> *", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "digraph *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "digraph *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "digraph *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "digraph *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13739c"
  }, 
  "_M_insert_unique<boost::re_detail_500::digraph<char>const&>": {
    "variables": [
      {
        "name": "local_49", 
        "RBP offset": -65, 
        "type": "bool", 
        "size": 1
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "_Alloc_node[8]", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "char[16]", 
        "size": 16
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long[3]", 
        "size": 24
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13767a"
  }, 
  "pair<std::_Rb_tree_iterator<boost::re_detail_500::digraph<char>>&,bool&,true>": {
    "variables": [], 
    "address": "0x137782"
  }, 
  "forward<char>": {
    "variables": [], 
    "address": "0x1377cf"
  }, 
  "forward<char&>": {
    "variables": [], 
    "address": "0x1377dd"
  }, 
  "construct<std::pair<bool,boost::re_detail_500::re_syntax_base*>,std::pair<bool,boost::re_detail_500::re_syntax_base*>>": {
    "variables": [], 
    "address": "0x137876"
  }, 
  "_S_select_on_copy": {
    "variables": [], 
    "address": "0x137c08"
  }, 
  "_Vector_base": {
    "variables": [], 
    "address": "0x137c54"
  }, 
  "_Construct<boost::sub_match<__normal_iterator<char_const*,std::string>>,boost::sub_match<__normal_iterator<char_const*,std::string>>&>": {
    "variables": [], 
    "address": "0x137e41"
  }, 
  "_Construct<boost::sub_match<__normal_iterator<char_const*,std::string>>,boost::sub_match<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x137f53"
  }, 
  "_List_impl": {
    "variables": [], 
    "address": "0x1381cc"
  }, 
  "~_List_base": {
    "variables": [], 
    "address": "0x138210"
  }, 
  "_List_const_iterator": {
    "variables": [], 
    "address": "0x1383d0"
  }, 
  "back": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13847e"
  }, 
  "operator->": {
    "variables": [], 
    "address": "0x138532"
  }, 
  "~cpp_regex_traits_char_layer": {
    "variables": [], 
    "address": "0x138550"
  }, 
  "~_Rb_tree_impl": {
    "variables": [], 
    "address": "0x13864c"
  }, 
  "_Rb_tree": {
    "variables": [], 
    "address": "0x138668"
  }, 
  "map": {
    "variables": [], 
    "address": "0x138684"
  }, 
  "~map": {
    "variables": [], 
    "address": "0x1386a0"
  }, 
  "cpp_regex_traits_implementation": {
    "variables": [], 
    "address": "0x1386bc"
  }, 
  "shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>,void>": {
    "variables": [], 
    "address": "0x13877a"
  }, 
  "pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>&,boost::re_detail_500::cpp_regex_traits_base<char>const*,true>": {
    "variables": [], 
    "address": "0x1387a0"
  }, 
  "push_back": {
    "variables": [], 
    "address": "0x1387ee"
  }, 
  "cpp_regex_traits_base": {
    "variables": [], 
    "address": "0x138836"
  }, 
  "make_pair<boost::re_detail_500::cpp_regex_traits_base<char>const&,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>&>": {
    "variables": [], 
    "address": "0x13888c"
  }, 
  "insert<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>": {
    "variables": [], 
    "address": "0x1388dc"
  }, 
  "use_count": {
    "variables": [], 
    "address": "0x138a44"
  }, 
  "forward<boost::re_detail_500::named_subexpressions::name>": {
    "variables": [], 
    "address": "0x138d0e"
  }, 
  "_S_use_relocate": {
    "variables": [], 
    "address": "0x138d55"
  }, 
  "_S_nothrow_relocate": {
    "variables": [], 
    "address": "0x138d87"
  }, 
  "_M_realloc_insert<boost::re_detail_500::named_subexpressions::name>": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>> *", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "name *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "name *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "name *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "name *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x138d92"
  }, 
  "destroy<std::pair<unsigned_long,unsigned_long>>": {
    "variables": [], 
    "address": "0x139182"
  }, 
  "empty": {
    "variables": [], 
    "address": "0x139398"
  }, 
  "uninitialized_copy<std::move_iterator<long*>,long*>": {
    "variables": [], 
    "address": "0x139681"
  }, 
  "forward<boost::re_detail_500::digraph<char>const&>": {
    "variables": [], 
    "address": "0x1396b2"
  }, 
  "_Alloc_node": {
    "variables": [], 
    "address": "0x139b30"
  }, 
  "_M_insert_<boost::re_detail_500::digraph<char>const&,std::_Rb_tree<boost::re_detail_500::digraph<char>,boost::re_detail_500::digraph<char>,std::_Identity<boost::re_detail_500::digraph<char>>,std::less<boost::re_detail_500::digraph<char>>,std::allocator<boost::re_detail_500::digraph<char>>>::_Alloc_node>": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x139b4a"
  }, 
  "pair<std::_Rb_tree_iterator<boost::re_detail_500::digraph<char>>,bool,true>": {
    "variables": [], 
    "address": "0x139c5e"
  }, 
  "forward<std::_Rb_tree_iterator<boost::re_detail_500::digraph<char>>&>": {
    "variables": [], 
    "address": "0x139cbc"
  }, 
  "select_on_container_copy_construction": {
    "variables": [], 
    "address": "0x139e74"
  }, 
  "_M_create_storage": {
    "variables": [], 
    "address": "0x139e9e"
  }, 
  "recursion_info": {
    "variables": [], 
    "address": "0x139efe"
  }, 
  "_Construct<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>,boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>const&>": {
    "variables": [], 
    "address": "0x139f68"
  }, 
  "forward<boost::sub_match<__normal_iterator<char_const*,std::string>>&>": {
    "variables": [], 
    "address": "0x13a0e9"
  }, 
  "move<boost::sub_match<__normal_iterator<char_const*,std::string>>&>": {
    "variables": [], 
    "address": "0x13a0f7"
  }, 
  "forward<boost::sub_match<__normal_iterator<char_const*,std::string>>>": {
    "variables": [], 
    "address": "0x13a13d"
  }, 
  "_M_clear": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13a1a4"
  }, 
  "find": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13a2ca"
  }, 
  "move<std::list<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>,std::allocator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>&>": {
    "variables": [], 
    "address": "0x13a420"
  }, 
  "splice": {
    "variables": [
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "list *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "list<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>>,boost::re_detail_500::cpp_regex_traits_base<char>*>,std::allocator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>>,boost::re_detail_500::cpp_regex_traits_base<char>*>>> *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "_List__iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>>,boost::re_detail_500::cpp_regex_traits_base<char>*>>[8]", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13a42e"
  }, 
  "_Rb_tree_impl": {
    "variables": [], 
    "address": "0x13a6bc"
  }, 
  "~allocator": {
    "variables": [], 
    "address": "0x13a6f4"
  }, 
  "~_Rb_tree": {
    "variables": [], 
    "address": "0x13a710"
  }, 
  "init": {
    "variables": [
      {
        "name": "local_c8", 
        "RBP offset": -192, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_c4", 
        "RBP offset": -188, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_c0", 
        "RBP offset": -184, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_bc", 
        "RBP offset": -180, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_b8", 
        "RBP offset": -176, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_b0", 
        "RBP offset": -168, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_a8", 
        "RBP offset": -160, 
        "type": "cpp_regex_traits<char>[32]", 
        "size": 32
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "runtime_error[32]", 
        "size": 32
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[40]", 
        "size": 40
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13a74a"
  }, 
  "forward<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>&>": {
    "variables": [], 
    "address": "0x13acaa"
  }, 
  "forward<boost::re_detail_500::cpp_regex_traits_base<char>const*>": {
    "variables": [], 
    "address": "0x13acb8"
  }, 
  "move<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>&>": {
    "variables": [], 
    "address": "0x13acc6"
  }, 
  "_M_insert<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>": {
    "variables": [], 
    "address": "0x13acd4"
  }, 
  "forward<boost::re_detail_500::cpp_regex_traits_base<char>const&>": {
    "variables": [], 
    "address": "0x13ad31"
  }, 
  "forward<std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>&>": {
    "variables": [], 
    "address": "0x13ad3f"
  }, 
  "pair<std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>&,true>": {
    "variables": [], 
    "address": "0x13ad4e"
  }, 
  "forward<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>": {
    "variables": [], 
    "address": "0x13ad8f"
  }, 
  "_M_emplace_unique<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>": {
    "variables": [
      {
        "name": "local_59", 
        "RBP offset": -81, 
        "type": "bool", 
        "size": 1
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "_Rb_tree_node *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "char[16]", 
        "size": 16
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long[3]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13ad9e"
  }, 
  "_M_emplace_hint_unique<std::piecewise_construct_t_const&,std::tuple<boost::re_detail_500::cpp_regex_traits_base<char>const&>,std::tuple<>>": {
    "variables": [
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "_Rb_tree_node *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "char[16]", 
        "size": 16
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13aff0"
  }, 
  "_M_get_use_count": {
    "variables": [], 
    "address": "0x13b12a"
  }, 
  "erase": {
    "variables": [
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "_Rb_tree_iterator[8]", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "_Rb_tree_iterator[16]", 
        "size": 16
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13b15a"
  }, 
  "construct<boost::re_detail_500::named_subexpressions::name,boost::re_detail_500::named_subexpressions::name>": {
    "variables": [], 
    "address": "0x13b38e"
  }, 
  "_M_check_len": {
    "variables": [
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "vector<boost::re_detail_500::named_subexpressions::name,std::allocator<boost::re_detail_500::named_subexpressions::name>> *", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13b3d0"
  }, 
  "operator-": {
    "variables": [], 
    "address": "0x13b4bb"
  }, 
  "_M_allocate": {
    "variables": [], 
    "address": "0x13b4fa"
  }, 
  "_S_relocate": {
    "variables": [], 
    "address": "0x13b52d"
  }, 
  "uninitialized_copy<std::move_iterator<std::pair<unsigned_long,unsigned_long>*>,std::pair<unsigned_long,unsigned_long>*>": {
    "variables": [], 
    "address": "0x13b71b"
  }, 
  "_M_construct_aux<__normal_iterator<char*,std::string>>": {
    "variables": [], 
    "address": "0x13b954"
  }, 
  "move<long*&>": {
    "variables": [], 
    "address": "0x13ba45"
  }, 
  "destroy<boost::re_detail_500::digraph<char>>": {
    "variables": [], 
    "address": "0x13bb48"
  }, 
  "pair<std::_Rb_tree_node<boost::re_detail_500::digraph<char>>*&,std::_Rb_tree_node_base*&,true>": {
    "variables": [], 
    "address": "0x13bc52"
  }, 
  "forward<std::_Rb_tree_iterator<boost::re_detail_500::digraph<char>>>": {
    "variables": [], 
    "address": "0x13bd49"
  }, 
  "forward<bool>": {
    "variables": [], 
    "address": "0x13bd57"
  }, 
  "uninitialized_copy<std::move_iterator<std::pair<bool,boost::re_detail_500::re_syntax_base*>*>,std::pair<bool,boost::re_detail_500::re_syntax_base*>*>": {
    "variables": [], 
    "address": "0x13bea7"
  }, 
  "forward<boost::re_detail_500::recursion_info<boost::match_results<__normal_iterator<char_const*,std::string>,std::allocator<boost::sub_match<__normal_iterator<char_const*,std::string>>>>>const&>": {
    "variables": [], 
    "address": "0x13bef2"
  }, 
  "_M_check_equal_allocators": {
    "variables": [], 
    "address": "0x13c130"
  }, 
  "_M_transfer": {
    "variables": [], 
    "address": "0x13c178"
  }, 
  "_M_inc_size": {
    "variables": [], 
    "address": "0x13c1aa"
  }, 
  "_M_dec_size": {
    "variables": [], 
    "address": "0x13c1d0"
  }, 
  "_Rb_tree_key_compare": {
    "variables": [], 
    "address": "0x13c2d8"
  }, 
  "allocator": {
    "variables": [], 
    "address": "0x13c368"
  }, 
  "~new_allocator": {
    "variables": [], 
    "address": "0x13c384"
  }, 
  "_M_erase": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13c390"
  }, 
  "_M_begin": {
    "variables": [], 
    "address": "0x13c3f6"
  }, 
  "operator[]": {
    "variables": [
      {
        "name": "local_39", 
        "RBP offset": -49, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "less<std::string>[8]", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13c530"
  }, 
  "find_sort_syntax<boost::re_detail_500::cpp_regex_traits_implementation<char>,char>": {
    "variables": [
      {
        "name": "local_8c", 
        "RBP offset": -132, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_88", 
        "RBP offset": -128, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "string[32]", 
        "size": 32
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "string[34]", 
        "size": 34
      }, 
      {
        "name": "local_26", 
        "RBP offset": -30, 
        "type": "char[6]", 
        "size": 6
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13c64c"
  }, 
  "_M_enable_shared_from_this_with<boost::re_detail_500::cpp_regex_traits_implementation<char>,boost::re_detail_500::cpp_regex_traits_implementation<char>>": {
    "variables": [], 
    "address": "0x13c98c"
  }, 
  "forward<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>": {
    "variables": [], 
    "address": "0x13c99b"
  }, 
  "_M_create_node<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "__allocated_ptr<std::allocator<std::_List_node<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>>,boost::re_detail_500::cpp_regex_traits_base<char>*>>>>[24]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13c9aa"
  }, 
  "_M_create_node<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>": {
    "variables": [], 
    "address": "0x13ca70"
  }, 
  "pair<std::_Rb_tree_iterator<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>,bool,true>": {
    "variables": [], 
    "address": "0x13cd86"
  }, 
  "forward<std::piecewise_construct_t_const&>": {
    "variables": [], 
    "address": "0x13cec6"
  }, 
  "forward<std::tuple<boost::re_detail_500::cpp_regex_traits_base<char>const&>>": {
    "variables": [], 
    "address": "0x13ced4"
  }, 
  "forward<std::tuple<>>": {
    "variables": [], 
    "address": "0x13cee2"
  }, 
  "_M_create_node<std::piecewise_construct_t_const&,std::tuple<boost::re_detail_500::cpp_regex_traits_base<char>const&>,std::tuple<>>": {
    "variables": [], 
    "address": "0x13cef0"
  }, 
  "equal_range": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "_Rb_tree_node *", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long[3]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13d310"
  }, 
  "_S_do_relocate": {
    "variables": [], 
    "address": "0x13d653"
  }, 
  "destroy<boost::re_detail_500::named_subexpressions::name>": {
    "variables": [], 
    "address": "0x13d6fe"
  }, 
  "move<std::pair<unsigned_long,unsigned_long>*&>": {
    "variables": [], 
    "address": "0x13d7bb"
  }, 
  "_S_key": {
    "variables": [
      {
        "name": "local_11", 
        "RBP offset": -9, 
        "type": "_Select1st<std::pair<std::string_,std::string>>", 
        "size": 1
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13d884"
  }, 
  "_M_construct<__normal_iterator<char*,std::string>>": {
    "variables": [
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long *", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13d906"
  }, 
  "copy<std::move_iterator<long*>,long*>": {
    "variables": [], 
    "address": "0x13da64"
  }, 
  "uninitialized_copy<boost::re_detail_500::digraph<char>const*,boost::re_detail_500::digraph<char>*>": {
    "variables": [], 
    "address": "0x13db63"
  }, 
  "operator<": {
    "variables": [], 
    "address": "0x13db94"
  }, 
  "forward<std::_Rb_tree_node<boost::re_detail_500::digraph<char>>*&>": {
    "variables": [], 
    "address": "0x13dbe6"
  }, 
  "forward<std::_Rb_tree_node_base*&>": {
    "variables": [], 
    "address": "0x13dbf4"
  }, 
  "_M_create_node<boost::re_detail_500::digraph<char>const&>": {
    "variables": [], 
    "address": "0x13dc02"
  }, 
  "move<std::pair<bool,boost::re_detail_500::re_syntax_base*>*&>": {
    "variables": [], 
    "address": "0x13dcf7"
  }, 
  "destroy<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>": {
    "variables": [], 
    "address": "0x13ddb2"
  }, 
  "_S_do_it": {
    "variables": [], 
    "address": "0x13de82"
  }, 
  "new_allocator": {
    "variables": [], 
    "address": "0x13df78"
  }, 
  "_S_right": {
    "variables": [], 
    "address": "0x13df83"
  }, 
  "_S_left": {
    "variables": [], 
    "address": "0x13df95"
  }, 
  "_M_drop_node": {
    "variables": [], 
    "address": "0x13dfa8"
  }, 
  "forward_as_tuple<int>": {
    "variables": [], 
    "address": "0x13e0aa"
  }, 
  "_M_emplace_hint_unique<std::piecewise_construct_t_const&,std::tuple<int&&>,std::tuple<>>": {
    "variables": [
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "_Rb_tree_node *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "char[16]", 
        "size": 16
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13e0fc"
  }, 
  "tuple<true,true>": {
    "variables": [], 
    "address": "0x13e2d8"
  }, 
  "_Rb_tree_const_iterator": {
    "variables": [], 
    "address": "0x13e2fe"
  }, 
  "_M_emplace_hint_unique<std::piecewise_construct_t_const&,std::tuple<std::string_const&>,std::tuple<>>": {
    "variables": [
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "_Rb_tree_node *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "char[16]", 
        "size": 16
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13e31c"
  }, 
  "~cpp_regex_traits_implementation": {
    "variables": [], 
    "address": "0x13e456"
  }, 
  "~__allocated_ptr": {
    "variables": [], 
    "address": "0x13e584"
  }, 
  "operator=": {
    "variables": [], 
    "address": "0x13e5f8"
  }, 
  "_M_construct_node<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>": {
    "variables": [], 
    "address": "0x13e63e"
  }, 
  "pair<std::_Rb_tree_node<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>*&,std::_Rb_tree_node_base*&,true>": {
    "variables": [], 
    "address": "0x13e728"
  }, 
  "forward<std::_Rb_tree_iterator<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>>": {
    "variables": [], 
    "address": "0x13e7c4"
  }, 
  "_M_construct_node<std::piecewise_construct_t_const&,std::tuple<boost::re_detail_500::cpp_regex_traits_base<char>const&>,std::tuple<>>": {
    "variables": [], 
    "address": "0x13e7ec"
  }, 
  "pair<std::_Rb_tree_node_base*&,true>": {
    "variables": [], 
    "address": "0x13e91c"
  }, 
  "pair<std::_Rb_tree_node_base*&,std::_Rb_tree_node_base*&,true>": {
    "variables": [], 
    "address": "0x13e96a"
  }, 
  "_M_upper_bound": {
    "variables": [
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "_Rb_tree_node *", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13e9d6"
  }, 
  "pair<std::_Rb_tree_iterator<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>,std::_Rb_tree_iterator<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>,true>": {
    "variables": [], 
    "address": "0x13ea88"
  }, 
  "clear": {
    "variables": [], 
    "address": "0x13eaee"
  }, 
  "_M_erase_aux": {
    "variables": [], 
    "address": "0x13eba8"
  }, 
  "_S_max_size": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13ebfd"
  }, 
  "_M_get_Tp_allocator": {
    "variables": [], 
    "address": "0x13ec62"
  }, 
  "move_iterator": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "name *", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "move_iterator<boost::re_detail_500::named_subexpressions::name*> *", 
        "size": 8
      }
    ], 
    "address": "0x13ed16"
  }, 
  "uninitialized_copy<std::move_iterator<boost::re_detail_500::named_subexpressions::name*>,boost::re_detail_500::named_subexpressions::name*>": {
    "variables": [], 
    "address": "0x13ed3f"
  }, 
  "_Construct<std::pair<unsigned_long,unsigned_long>,std::pair<unsigned_long,unsigned_long>>": {
    "variables": [], 
    "address": "0x13ee49"
  }, 
  "operator()": {
    "variables": [], 
    "address": "0x13ee92"
  }, 
  "_M_construct_node<boost::re_detail_500::digraph<char>const&>": {
    "variables": [], 
    "address": "0x13f016"
  }, 
  "_Construct<std::pair<bool,boost::re_detail_500::re_syntax_base*>,std::pair<bool,boost::re_detail_500::re_syntax_base*>>": {
    "variables": [], 
    "address": "0x13f18d"
  }, 
  "_M_destroy_node": {
    "variables": [], 
    "address": "0x13f35c"
  }, 
  "_M_put_node": {
    "variables": [], 
    "address": "0x13f39a"
  }, 
  "tuple<int,true,true>": {
    "variables": [], 
    "address": "0x13f492"
  }, 
  "forward<std::tuple<int&&>>": {
    "variables": [], 
    "address": "0x13f501"
  }, 
  "_M_create_node<std::piecewise_construct_t_const&,std::tuple<int&&>,std::tuple<>>": {
    "variables": [], 
    "address": "0x13f510"
  }, 
  "lower_bound": {
    "variables": [], 
    "address": "0x13fa30"
  }, 
  "end": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13fa7c"
  }, 
  "key_comp": {
    "variables": [], 
    "address": "0x13fac8"
  }, 
  "forward<std::tuple<std::string_const&>>": {
    "variables": [], 
    "address": "0x13fb18"
  }, 
  "_M_create_node<std::piecewise_construct_t_const&,std::tuple<std::string_const&>,std::tuple<>>": {
    "variables": [], 
    "address": "0x13fb26"
  }, 
  "_M_get_insert_hint_unique_pos": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "_Rb_tree<std::string,std::pair<std::string_,_int>,std::_Select1st<std::pair<std::string_,_int>>,std::less<std::string>,std::allocator<std::pair<std::string_,_int>>> *", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long[3]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13fba2"
  }, 
  "_M_insert_node": {
    "variables": [
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x13ff46"
  }, 
  "_Rb_tree_iterator": {
    "variables": [], 
    "address": "0x14002c"
  }, 
  "_Sp_counted_ptr": {
    "variables": [], 
    "address": "0x140046"
  }, 
  "pair": {
    "variables": [], 
    "address": "0x1400b8"
  }, 
  "construct<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>,std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>": {
    "variables": [], 
    "address": "0x1400ee"
  }, 
  "forward<std::_Rb_tree_node<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>*&>": {
    "variables": [], 
    "address": "0x140198"
  }, 
  "move<boost::re_detail_500::named_subexpressions::name*&>": {
    "variables": [], 
    "address": "0x1402d9"
  }, 
  "_Construct<boost::re_detail_500::digraph<char>,boost::re_detail_500::digraph<char>const&>": {
    "variables": [], 
    "address": "0x140452"
  }, 
  "destroy<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>": {
    "variables": [], 
    "address": "0x14054c"
  }, 
  "_M_get_Node_allocator": {
    "variables": [], 
    "address": "0x14066c"
  }, 
  "_M_valptr": {
    "variables": [], 
    "address": "0x14067a"
  }, 
  "_Tuple_impl<int>": {
    "variables": [], 
    "address": "0x1407d0"
  }, 
  "forward<int&&>": {
    "variables": [], 
    "address": "0x14081d"
  }, 
  "_Head_base<int>": {
    "variables": [], 
    "address": "0x14082c"
  }, 
  "_M_construct_node<std::piecewise_construct_t_const&,std::tuple<int&&>,std::tuple<>>": {
    "variables": [], 
    "address": "0x14087a"
  }, 
  "_M_end": {
    "variables": [], 
    "address": "0x140bb6"
  }, 
  "_M_lower_bound": {
    "variables": [
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "_Rb_tree_node *", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x140bc8"
  }, 
  "_Head_base": {
    "variables": [], 
    "address": "0x140c9a"
  }, 
  "_M_get_node": {
    "variables": [], 
    "address": "0x140cb4"
  }, 
  "_M_construct_node<std::piecewise_construct_t_const&,std::tuple<std::string_const&>,std::tuple<>>": {
    "variables": [], 
    "address": "0x140cdc"
  }, 
  "_M_const_cast": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x140dae"
  }, 
  "size": {
    "variables": [], 
    "address": "0x140dfa"
  }, 
  "_M_rightmost": {
    "variables": [], 
    "address": "0x140e0c"
  }, 
  "_M_get_insert_unique_pos": {
    "variables": [
      {
        "name": "local_59", 
        "RBP offset": -81, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_58", 
        "RBP offset": -80, 
        "type": "_Rb_tree_node *", 
        "size": 8
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "_Rb_tree_node_base *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long[3]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x140e1e"
  }, 
  "_M_leftmost": {
    "variables": [], 
    "address": "0x140fb6"
  }, 
  "operator--": {
    "variables": [], 
    "address": "0x140fc8"
  }, 
  "construct<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>,std::pair<boost::re_detail_500::cpp_regex_traits_base<char>,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>>": {
    "variables": [], 
    "address": "0x1410b0"
  }, 
  "construct<std::pair<boost::re_detail_500::cpp_regex_traits_base<char>const,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>,std::piecewise_construct_t_const&,std::tuple<boost::re_detail_500::cpp_regex_traits_base<char>const&>,std::tuple<>>": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "tuple<boost::re_detail_500::cpp_regex_traits_base<char>&>[8]", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x14112c"
  }, 
  "max_size": {
    "variables": [], 
    "address": "0x1411f0"
  }, 
  "operator!=": {
    "variables": [], 
    "address": "0x14126f"
  }, 
  "operator++": {
    "variables": [], 
    "address": "0x141298"
  }, 
  "operator*": {
    "variables": [], 
    "address": "0x1412b8"
  }, 
  "_Construct<boost::re_detail_500::named_subexpressions::name,boost::re_detail_500::named_subexpressions::name>": {
    "variables": [], 
    "address": "0x1412c9"
  }, 
  "construct<boost::re_detail_500::digraph<char>,boost::re_detail_500::digraph<char>const&>": {
    "variables": [], 
    "address": "0x141392"
  }, 
  "destroy<std::pair<int_const,std::string>>": {
    "variables": [], 
    "address": "0x14140c"
  }, 
  "destroy<std::pair<std::string_const,unsigned_int>>": {
    "variables": [], 
    "address": "0x141484"
  }, 
  "_M_ptr": {
    "variables": [], 
    "address": "0x1414e0"
  }, 
  "~pair": {
    "variables": [], 
    "address": "0x1414fa"
  }, 
  "destroy<std::pair<std::string_const,std::string>>": {
    "variables": [], 
    "address": "0x141526"
  }, 
  "deallocate": {
    "variables": [], 
    "address": "0x141546"
  }, 
  "pair<std::_Rb_tree_node<std::pair<int_const,std::string>>*&,std::_Rb_tree_node_base*&,true>": {
    "variables": [], 
    "address": "0x141682"
  }, 
  "begin": {
    "variables": [
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x14176a"
  }, 
  "pair<std::_Rb_tree_node<std::pair<std::string_const,unsigned_int>>*&,std::_Rb_tree_node_base*&,true>": {
    "variables": [], 
    "address": "0x1417b6"
  }, 
  "pair<boost::re_detail_500::cpp_regex_traits_base<char>,std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>,true>": {
    "variables": [], 
    "address": "0x141822"
  }, 
  "pair<boost::re_detail_500::cpp_regex_traits_base<char>const&>": {
    "variables": [
      {
        "name": "local_19", 
        "RBP offset": -17, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1418ac"
  }, 
  "operator==": {
    "variables": [], 
    "address": "0x1418d6"
  }, 
  "_M_addr": {
    "variables": [], 
    "address": "0x141982"
  }, 
  "construct<std::pair<int_const,std::string>,std::piecewise_construct_t_const&,std::tuple<int&&>,std::tuple<>>": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "tuple<int&&>[8]", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1419dc"
  }, 
  "forward<std::_Rb_tree_node<std::pair<int_const,std::string>>*&>": {
    "variables": [], 
    "address": "0x141a9f"
  }, 
  "allocate": {
    "variables": [], 
    "address": "0x141aae"
  }, 
  "tuple": {
    "variables": [], 
    "address": "0x141afa"
  }, 
  "construct<std::pair<std::string_const,unsigned_int>,std::piecewise_construct_t_const&,std::tuple<std::string_const&>,std::tuple<>>": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "tuple<std::string_&>[8]", 
        "size": 8
      }, 
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x141b20"
  }, 
  "forward<std::_Rb_tree_node<std::pair<std::string_const,unsigned_int>>*&>": {
    "variables": [], 
    "address": "0x141be3"
  }, 
  "forward<boost::re_detail_500::cpp_regex_traits_base<char>>": {
    "variables": [], 
    "address": "0x141bf1"
  }, 
  "forward<std::_List_iterator<std::pair<std::shared_ptr<boost::re_detail_500::cpp_regex_traits_implementation<char>const>,boost::re_detail_500::cpp_regex_traits_base<char>const*>>>": {
    "variables": [], 
    "address": "0x141bff"
  }, 
  "pair<boost::re_detail_500::cpp_regex_traits_base<char>const&,0ul>": {
    "variables": [], 
    "address": "0x141c28"
  }, 
  "base": {
    "variables": [], 
    "address": "0x141c78"
  }, 
  "pair<int&&>": {
    "variables": [
      {
        "name": "local_19", 
        "RBP offset": -17, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x141c9e"
  }, 
  "_M_max_size": {
    "variables": [], 
    "address": "0x141cc8"
  }, 
  "_Tuple_impl": {
    "variables": [], 
    "address": "0x141cdc"
  }, 
  "pair<std::string_const&>": {
    "variables": [
      {
        "name": "local_19", 
        "RBP offset": -17, 
        "type": "char", 
        "size": 1
      }, 
      {
        "name": "local_18", 
        "RBP offset": -16, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_10", 
        "RBP offset": -8, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x141d18"
  }, 
  "get<0ul,boost::re_detail_500::cpp_regex_traits_base<char>const&>": {
    "variables": [], 
    "address": "0x141d53"
  }, 
  "_List_iterator": {
    "variables": [], 
    "address": "0x141d6e"
  }, 
  "pair<int&&,0ul>": {
    "variables": [], 
    "address": "0x141d84"
  }, 
  "forward<std::string_const&>": {
    "variables": [], 
    "address": "0x141de1"
  }, 
  "pair<std::string_const&,0ul>": {
    "variables": [], 
    "address": "0x141df0"
  }, 
  "get<0ul,int&&>": {
    "variables": [], 
    "address": "0x141e54"
  }, 
  "_M_head": {
    "variables": [], 
    "address": "0x141e6e"
  }, 
  "get<0ul,std::string_const&>": {
    "variables": [], 
    "address": "0x141e7f"
  }, 
  "~_Sp_counted_ptr": {
    "variables": [], 
    "address": "0x141fa4"
  }, 
  "seekoff": {
    "variables": [
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long[3]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x1420a8"
  }, 
  "seekpos": {
    "variables": [
      {
        "name": "local_68", 
        "RBP offset": -96, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_60", 
        "RBP offset": -88, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_54", 
        "RBP offset": -76, 
        "type": "int", 
        "size": 4
      }, 
      {
        "name": "local_50", 
        "RBP offset": -72, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_48", 
        "RBP offset": -64, 
        "type": "long long", 
        "size": 8
      }, 
      {
        "name": "local_40", 
        "RBP offset": -56, 
        "type": "char *", 
        "size": 8
      }, 
      {
        "name": "local_38", 
        "RBP offset": -48, 
        "type": "long long[3]", 
        "size": 24
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x142302"
  }, 
  "_M_dispose": {
    "variables": [], 
    "address": "0x14242c"
  }, 
  "_M_destroy": {
    "variables": [], 
    "address": "0x142462"
  }, 
  "_M_get_deleter": {
    "variables": [], 
    "address": "0x142484"
  }, 
  "wrapexcept": {
    "variables": [], 
    "address": "0x142a62"
  }, 
  "clone": {
    "variables": [
      {
        "name": "local_30", 
        "RBP offset": -40, 
        "type": "wrapexcept<boost::regex_error> *", 
        "size": 8
      }, 
      {
        "name": "local_28", 
        "RBP offset": -32, 
        "type": "wrapexcept<boost::regex_error> *", 
        "size": 8
      }, 
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "long long", 
        "size": 8
      }
    ], 
    "address": "0x142b1a"
  }, 
  "rethrow": {
    "variables": [], 
    "address": "0x142bf8"
  }, 
  "fpos": {
    "variables": [], 
    "address": "0x142c50"
  }, 
  "operator.cast.to.long": {
    "variables": [], 
    "address": "0x142c80"
  }, 
  "~deleter": {
    "variables": [], 
    "address": "0x142d10"
  }, 
  "set_program_name": {
    "variables": [
      {
        "name": "local_20", 
        "RBP offset": -24, 
        "type": "char *", 
        "size": 8
      }
    ], 
    "address": "0x142d3a"
  }, 
  "_fini": {
    "variables": [], 
    "address": "0x142e94"
  }
}